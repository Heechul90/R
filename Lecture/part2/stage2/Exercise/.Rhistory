ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
pct1 <- round(top10/sum(top10)*100,1)
top10
# 가장 추천 수가 많은 10개 골라서 pie형 그래프로 출력
top10 <- head(sort(wordcount, decreasing = T), 10)
top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
pct1 <- round(top10/sum(top10)*100,1)
pct1 <- round(top10/sum(top10)*100,1)
names(top10)
lab <- paste(names(top10),'\n',pct1,'%')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0, label=lab)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity', label=lab)
ggplot(df_top10, aes(x='rev', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity', label=lab)
df_top10 <- as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='rev', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
pie(top10, main='123123123', col = rainbow(10), labels = lab)
df_top10
bchart_2
# ggplot으로 pie 그래프 그리기
options(digits = 2)
# 수치값을 함께 출력
pct <- round(top10/sum(top10)*100, 1)
pct
pct <- Freq/ sum(Freq)*100
palete <- brewer.pal(9,'Set1')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
rev
# 가장 추천 수가 많은 10개 골라서 pie형 그래프로 출력
top10 <- head(sort(wordcount, decreasing = T), 10)
top10
pie(top10, main='123123123', col = rainbow(10), labels = lab)
df_top10 <- as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0, label=lab)
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
# ggplot으로 bat 그래프 그리기
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
df_top10
# ggplot으로 bat 그래프 그리기
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
# ggplot으로 bat 그래프 그리기
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
df_top10
# 라벨 만드는 과정
options(digits = 2) # 소수점 다음 두자리까지 쓸거야 1.22, 3.44
df_top10 <- df_top10 %>%
mutate(pct=Freq/ sum(Freq)*100) %>%
mutate(ylabel=paste(sprintf('%4.1f', pct), '%', sep='')) %>%
arrange(desc(rev)) %>%  # 순서를 뒤집어야 함.
mutate(ypos = cumsum(pct) - 0.5*pct)
# mutate(ylabel=paste(pct, '%', sep=''))
# mutate(ylabel=paste(sprintf('%4.1f', pct), '%', sep=''))
df_top10
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x='rev', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
# mutate(ylabel=paste(pct, '%', sep=''))
# mutate(ylabel=paste(sprintf('%4.1f', pct), '%', sep=''))
df_top10
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black') +
coord_polar('y', start =0)
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black') +
coord_polar('y', start =0)
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black') +
coord_polar('y', start =0)
df_top10
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=pct, fill=rev)) +
geom_bar(width=1, stat='identity')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=pct, label=ylabel), color='black')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=pct, fill=rev)) +
geom_bar(width=1, stat='identity', ylim=c(0,25)) +
geom_text(aes(y=pct, label=ylabel), color='black')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=pct, fill=rev), ylim=c(0,25)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=pct, label=ylabel), color='black')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=pct, fill=rev), ylim=c(0,30)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=pct, label=ylabel), color='black')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=pct, fill=rev), ylim=c(0,30)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=pct, label=ylabel), color='black')
df_top10
# 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
# 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
df_top10
geom_text(aes(y=pct, label=ylabel), color='black')
# 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
geom_text(aes(y=pct, label=ylabel), color='black')
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
geom_text(aes(y=ypos, labels=ylabel), color='black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
geom_text(aes(y=ypos, label=ylabel), color='black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
geom_text(aes(y=pct, label=ylabel), color='black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
geom_text(aes(y=ypos, label=ylabel), color='black')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=pct, label=ylabel), color='black')
pie(top10, main='123123123', col = rainbow(10), labels = lab)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
geom_text(aes(y=ypos, label=ylabel), color='black')
top10
pct1 <- round(top10/sum(top10)*100, 1)
pct1
names(top10)
lab <- paste(names(top10), '\n', pct1, '%')
lab
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
geom_text(aes(y='', label=lab), color='black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
geom_text(aes(y=ypos, label=lab), color='black')
lab
df_top10
top10
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0) +
geom_text(aes(y=ypos, label=ylabel), color='black')
gg <- ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
# 가장 추천 수가 많은 10개 골라서 pie형 그래프로 출력
top10 <- head(sort(wordcount, decreasing = T), 10)
rev <- read.table('jeju_2.txt')
# ggplot으로 bar 그래프 그리기
ggplot(df_top10, aes(x=rev, y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=pct, label=ylabel), color='black')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
# 가장 추천 수가 많은 10개 골라서 pie형 그래프로 출력
top10 <- head(sort(wordcount, decreasing = T), 10)
top10
df_top10 <- as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
# 라벨 만드는 과정
options(digits = 2) # 소수점 다음 두자리까지 쓸거야 1.22, 3.44
df_top10 <- df_top10 %>%
mutate(pct=Freq/ sum(Freq)*100) %>%
mutate(ylabel=paste(sprintf('%4.1f', pct), '%', sep='')) %>%
arrange(desc(rev)) %>%  # 순서를 뒤집어야 함.
mutate(ypos = cumsum(pct) - 0.5*pct)
# mutate(ylabel=paste(pct, '%', sep=''))
# mutate(ylabel=paste(sprintf('%4.1f', pct), '%', sep=''))
df_top10
# 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
# 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
# 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black') +
coord_polar('y', start =0) +
ggtitle('제주도 추천 여행 코스 TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'red'))
# 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black') +
coord_polar('y', start =0) +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'black'))
# 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
legend(0.3, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
# ggplot으로 pie 그래프 그리기
str(top10)
# ggplot으로 pie 그래프 그리기
head(sort(wordcount, decreasing = T), 10)
# ggplot으로 pie 그래프 그리기
top10 <- head(sort(wordcount, decreasing = T), 10)
top10
df_top10 <- as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
# 라벨 만드는 과정
options(digits = 2) # 소수점 다음 두자리까지 쓸거야 1.22, 3.44
df_top10 <- df_top10 %>%
mutate(pct=Freq/ sum(Freq)*100) %>%
mutate(ylabel=paste(sprintf('%4.1f', pct), '%', sep='')) %>%
arrange(desc(rev)) %>%  # 순서를 뒤집어야 함.
mutate(ypos = cumsum(pct) - 0.5*pct)
# mutate(ylabel=paste(pct, '%', sep=''))
# mutate(ylabel=paste(sprintf('%4.1f', pct), '%', sep=''))
df_top10
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black') +
coord_polar('y', start =0) +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'black'))
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar('y', start =0)
# 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x='rev', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
# 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x='rev', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity')
# mutate(ylabel=paste(pct, '%', sep=''))
# mutate(ylabel=paste(sprintf('%4.1f', pct), '%', sep=''))
df_top10
# 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity')
# 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
# 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity') +
geom_text(aes(y=Freq, label=ylabel), color='black')
# 3. 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity') +
geom_text(aes(y=Freq, label=ylabel), color='black', fill='green')
# 3. 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity', fill='green') +
geom_text(aes(y=Freq, label=ylabel), color='black')
# 3. 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity', fill='green', colour='red') +
geom_text(aes(y=Freq, label=ylabel), color='black')
gg <- ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity', fill='green', colour='red') +
geom_text(aes(y=Freq, label=ylabel), color='black')
gg + theme(axis.text.x = element_text(angle=30, hjust = 1, vjust = 1 color= blue, size=8))
gg + theme(axis.text.x = element_text(angle=30, hjust = 1, vjust = 1, color= blue, size=8))
gg + theme(axis.text.x = element_text(angle=30, hjust = 1, vjust = 1, color= 'blue', size=8))
# 3. 라벨을 만들고 그래프 그리기
gg <- ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity', fill='green', colour='red') +
geom_text(aes(y=Freq, label=ylabel), color='black') +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'black'))
gg
# 3. 라벨을 만들고 그래프 그리기
gg <- ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity', fill='green', colour='red') +
geom_text(aes(y=Freq, label=ylabel), color='black') +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(hjust = 0.5, size = 15, color = 'black'))
gg
# 3. 라벨을 만들고 그래프 그리기
gg <- ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity', fill='green', colour='red') +
geom_text(aes(y=Freq, label=ylabel), color='black') +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'red'))
gg
gg + theme(axis.text.x = element_text(angle=30, hjust = 1, vjust = 1, color= 'blue', size=8))
# 2. 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black') +
coord_polar('y', start =0) +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'black'))
# 2. 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black', size=4) +
coord_polar('y', start =0) +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'red'))
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 1,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale = c(4,0.2), rot.per = 0.25, min.freq = 1,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale = c(5,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
# wordcloud
palete <- brewer.pal(9,'Dark2')
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
.legend(0.3, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.3, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.2, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.25, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.25, 1, 'Hiphop Words', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red')
legend(0.25, 1, 'Hiphop Words', cex=1.5, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red')
legend(0.25, 1, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red')
legend(0.3, 1, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red', box.lty = 'o')
legend(0.3, 1, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red', box.lty = 1)
legend(0.3, 1, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red', box.lty = 4)
legend(0.3, 1, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red', box.lty = 5)
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red', box.lty = 5)
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red', box.lty = 5)
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 0.8, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red', box.lty = 5)
legend(0.3, 0.9, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red', box.lty = 5)
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 0.9, 'Hiphop Words', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=4, box.col='red', box.lty = 5)
# 2. 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black', size=4) +
coord_polar('y', start =0) +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'red'))
# 3. 라벨을 만들고 그래프 그리기
gg <- ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity', fill='green', colour='red') +
geom_text(aes(y=Freq, label=ylabel), color='black') +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'red'))
gg + theme(axis.text.x = element_text(angle=30, hjust = 1, vjust = 1, color= 'blue', size=8))
# 3. 라벨을 만들고 그래프 그리기
gg <- ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity', fill='green', colour='red') +
geom_text(aes(y=Freq, label=ylabel), color='black') +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'red'))
# 2. 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black', size=4) +
coord_polar('y', start =0) +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'red'))
# 3. 라벨을 만들고 그래프 그리기
gg <- ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity', fill='green', colour='red') +
geom_text(aes(y=Freq, label=ylabel), color='black') +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'red'))
gg
gg + theme(axis.text.x = element_text(angle=30, hjust = 1, vjust = 1, color= 'blue', size=8))
wordcloud(names(wordcount), freq = wordcount, scale = c(3,0.2), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
# 2. 라벨을 만들고 그래프 그리기
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
# 2. 바 그래프 만든후에 pie형 그래프로 변환
ggplot(df_top10, aes(x='', y=pct, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black', size=4) +
coord_polar('y', start =0) +
ggtitle('Hiphop Words TOP 10') +
theme(plot.title = element_text(face = 'bold',hjust = 0.5, size = 15, color = 'red'))
