data1 <- readLines('seoul_new.txt')
getwd()
data1 <- readLines('seoul_new.txt')
data1
?extractNoun('')
extractNoun('서울시 버스정책을 역행하는 행위를 고발합니다')
data2 <- sapply(data1,extractNoun,USE.NAMES = F)
data1
data2 <- sapply(data1,extractNoun,USE.NAMES = F)
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
library(wordcloud)
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
library(wordcloud)
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
library(rJava)
library(KoNLP)
library(wordcloud)
data1 <- readLines('seoul_new.txt')
data1
useSejongDic()
data1
extractNoun('서울시 버스정책을 역행하는 행위를 고발합니다')
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2
head(unlist(data2), 30)
data3 <- unlist(data2)
data3
data3 <- gsub('\\+','',data3)
data3
data3 <- gsub('\\+','',data3)     # 모든숫자 없애기
data3 <- gsub('서울시','', data3)
data3 <- gsub('서울','', data3)
data3 <- gsub('요청','', data3)
data3 <- gsub('제안','', data3)
data3 <- gsub(' ','', data3)
data3 <- gsub('-','', data3)
data3
data3 <- gsub('\\d+','',data3)     # 모든숫자 없애기
data3
write(unlist(data3), 'seoul.txt')
write(unlist(data3), 'seoul_2.txt')
data4 <- read.table('seoul_2.txt')
data4
head(data4)
nrow(data4)
nrow(data4)
workcount <- table(data4)
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T), 20)
data3 <- gsub('OO','', data3)
data3 <- gsub('개선','', data3)
data3 <- gsub('문제','', data3)
data3 <- gsub('관리','', data3)
data3 <- gsub('민원','', data3)
data3 <- gsub('이용','', data3)
data3 <- gsub('관련','', data3)
data3 <- gsub('시장','', data3)
data3
write(unlist(data3), 'seoul_3.txt')
data4 <- read.table('seoul_3.txt')
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T),20)
library(RColorBrewer)
# word Cloud 형태로 그래픽으로 출력
palete <- brewer.pal(9,'Set3')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 1,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '서울시 응답소 요청사항 분석', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 1,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '서울시 응답소 요청사항 분석', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 1,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale = c(6,1), rot.per = 0.25, min.freq = 1,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 1,
random.order = F, random.color = T, colors = palete)
# word Cloud 형태로 그래픽으로 출력
palete <- brewer.pal(8,'Dark2')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,0.3), rot.per = 0.1, min.freq = 1,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '서울시 응답소 요청사항 분석', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 0.8, '서울시 응답소 요청사항 분석', cex=0.5, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 0.8, '서울시 응답소 요청사항 분석', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 0.8, '서울시 응답소 요청사항 분석', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,0.3), rot.per = 0.1, min.freq = 1,
random.order = F, random.color = T, colors = palete)
legend(0.2, 0.8, '서울시 응답소 요청사항 분석', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 1, '서울시 응답소 요청사항 분석', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 0.9, '서울시 응답소 요청사항 분석', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,0.3), rot.per = 0.1, min.freq = 1,
random.order = F, random.color = T, colors = palete)
legend(0.2, 0.9, '서울시 응답소 요청사항 분석', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
ddd <- readLines('data/seoul_new.txt')
ddd
data3 <- gsub('한','', data3)
data3 <- gsub('님','', data3)
write(unlist(data3), 'seoul_3.txt')
data4 <- read.table('seoul_3.txt')
wordcount <- table(data4)
head(sort(wordcount, decreasing = T),20)
palete <- brewer.pal(8,'Dark2')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,0.3), rot.per = 0.1, min.freq = 1,
random.order = F, random.color = T, colors = palete)
legend(0.2, 0.9, '서울시 응답소 요청사항 분석', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,0.3), rot.per = 0.1, min.freq = 1,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale = c(6,0.3), rot.per = 0.1, min.freq = 1,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale = c(5,0.3), rot.per = 0.2, min.freq = 1,
random.order = F, random.color = T, colors = palete)
legend(0.2, 0.9, '서울시 응답소 요청사항 분석', cex=0.6, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
v1
# KoNLP 패키지지
v1 <- ('봄이 지나면 여름이고 여름이 지나면 가을입니다.그리고 겨울이죠')
v1
extractNoun(v1)
v2 <- ('봄이지나 면여름이고 여름이지나면가을 입니다')
extractNoun(v2)
v3 <- ('봄이 지나면 여름이고 여름이 지나면 가을입니다', '그리고 겨울이죠')
v3 <- c('봄이 지나면 여름이고 여름이 지나면 가을입니다', '그리고 겨울이죠')
v3
extractNoun(v3)
v4 <- sapply(v3, extractNoun, USE.NAMES = F)
v4
wordcloud(c(letters, LETTERS, 0:9), seq(1,1000, len=62))
palete <- brewer.pal(9,'Set1')
wordcloud(c(letters,LETTERS,0:9), seq(1,1000, len=62), colors=palete)
setwd('D:/Heechul/R/R_Lecture/part2/stage1_Word Cloud/Ex2')
library(KoNLP)
library(wordcloud)
useSejongDic()
data1 <- readLines('remake.txt')
data1
data2 <- sapply(data1, extractNoun,USE.NAMES = F)
data2
data3 <- unlist(data2)
data3 <- Filter(function(x) {
nchar(x) <= 10
}, data3)
head(unlist(data3), 30)
data3 <- gsub('\\d', '', data3)
data3 <- gsub('쌍수', '쌍꺼풀', data3)
data3 <- gsub('쌍커풀', '쌍커풀', data3)
data3 <- gsub('메부리코', '매부리코', data3)
data3 <- gsub('\\', '', data3)
data3 <- gsub('\\.', '', data3)
data3 <- gsub(' ', '', data3)
data3 <- gsub("\\'", '', data3)
data3
write(unlist(data3), 'remake_2.txt')
data4 <- read.table('remake_2.txt')
data4
nrow(data4)
wordcount <- table(data4)
wordcount
# 필요 없는 단어들 제거하기2
head(sort(wordcount,decreasing = T), 20)
txt <- readLines('성형gsub.txt')
txt
cnt_txt <- length(txt)
cnt_txt
i <- 1
for(i in 1:cnt_txt) {
data3 <- gsub((txt[i]), '', data3)
}
data3
data3 <- Filter(function(x) {nchar(x)>=2}, data3)
head(unlist(data3), 30)
write(unlist(data3),'remake_2.txt')
data4 <- read.table('remake_2.txt')
data4
nrow(data4)
wordcount <- table(data4)
wordcount
head(sort(wordcount, decreasing = T), 30)
library(RColorBrewer)
# step4 워드클라우드를 생성하자자
palete <- brewer.pal(9,'Set3')
wordcloud(names(wordcloud), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F,random.color = T, colors=palete)
wordcloud(names(wordcloud), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors=palete)
wordcloud(names(wordcloud), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 3,
random.order = F, random.color = T, colors=palete)
wordcloud(names(wordcloud), freq = wordcount, scale = c(5,1), rot.per = 0.3, min.freq = 2,
random.order = F, random.color = T, colors=palete)
head(sort(wordcount, decreasing = T), 30)
# step4 워드클라우드를 생성하자자
palete <- brewer.pal(9,'Set3')
wordcloud(names(wordcloud), freq = wordcount, scale = c(5,1), rot.per = 0.3, min.freq = 2,
random.order = F, random.color = T, colors=palete)
wordcloud(names(wordcloud), freq = wordcount, scale = c(5,1), rot.per = 0.2, min.freq = 2,
random.order = F, random.color = T, colors=palete)
wordcloud(names(wordcloud), freq = wordcount, scale = c(5,0.2), rot.per = 0.2, min.freq = 2,
random.order = F, random.color = T, colors=palete)
wordcloud(names(wordcloud), freq = wordcount, scale = c(5,0.2), rot.per = 0.2, min.freq = 1,
random.order = F, random.color = T, colors=palete)
# step4 워드클라우드를 생성하자자
palete <- brewer.pal(8,'Set3')
wordcloud(names(wordcloud), freq = wordcount, scale = c(5,0.2), rot.per = 0.2, min.freq = 1,
random.order = F, random.color = T, colors=palete)
wordcloud(names(wordcount), freq = wordcount, scale = c(5,0.2), rot.per = 0.2, min.freq = 1,
random.order = F, random.color = T, colors=palete)
legend(0.3, 1, '여고생들이 선호하는 성형수술 부위', cex=0.8,fill=NA,border=NA,bg='white',
text.col='red', text.font=2, box.col='red')
# 예제 1-3 제주도 추천 여행코스
setwd('D:/Heechul/R/R_Lecture/part2/stage1_Word Cloud/Ex3')
library(stringr)
mergeUserDic(data.frame(readLines('제주도여행지.txt'), 'ncn'))
txt <- readLines('jeju.txt')
place <- sapply(txt, extractNoun, USE.NAMES = F)
place
head(unlist(place), 30)
cdata <- unlist(place)
place <- str_replace_all(cdata,'[^[:alpha]]', '')
place <- str_replace_all(cdata,'[^[:alpha]]', '')    # 한글, 영어 외는 삭제제
place
txt <- readLines('jeju.txt')
place <- sapply(txt, extractNoun, USE.NAMES = F)
place
head(unlist(place), 30)
cdata <- unlist(place)
place <- str_replace_all(cdata,'[^[:alpha:]]', '')    # 한글, 영어 외는 삭제제
place
place <- gsub(' ', '', place)
txt <- readLines('제주도여행코스gsub.txt')
txt
cnt_txt<- length(txt)
cnt_txt
for(i in 1:cnt_txt) {
place <- gsub((txt[i]), '', place)
}
place
place <- filter(function(x) {nchar(x) >=}, place)
place <- Filter(function(x) {nchar(x) >=}, place)
place
place <- Filter(function(x) {nchar(x) >=2}, place)
place <- filter(function(x) {nchar(x) >=2}, place)
place <- Filter(function(x) {nchar(x) >=2}, place)
write(unlist(place), 'jeju_2.txt')
rev <- read.table('jeju_2.txt')
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 30)
palete <- brewer.pal(9,'Set1')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '제주도 추천 여행 코스 분석', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale = c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '제주도 추천 여행 코스 분석', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
# ggplot / R Markdown 연습문제제
dev.off()
mpg
mpg
library(dplyr)
mpg
mpg1
rm(list=ls())
mpg
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point()
mpg
