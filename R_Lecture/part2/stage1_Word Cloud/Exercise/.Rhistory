data1 <- readLines('seoul_new.txt')
getwd()
data1 <- readLines('seoul_new.txt')
data1
?extractNoun('')
extractNoun('서울시 버스정책을 역행하는 행위를 고발합니다')
data2 <- sapply(data1,extractNoun,USE.NAMES = F)
data1
data2 <- sapply(data1,extractNoun,USE.NAMES = F)
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
library(wordcloud)
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
library(wordcloud)
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
mpg
# 연습문제
# 1
setwd('D:/Heechul/R/R_Lecture/part2/stage1_Word Cloud/Exercise')
library(KoNLP)
library(wordcloud)
useSejongDic()
seoul1 <- readLines('응답소_2015_01.txt')
seoul1
data1 <- readLines('응답소_2015_01.txt')
data1
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2
head(unlist(data2), 30)
data3 <- unlist(data2)
library(stringr)
data2 <- str_replace_all(data3,'[^[:alpha:]]','')
data2
data2 <- gsub(' ','', data2)
data1 <- readLines('서울응답소gsub.txt')
data1 <- readLines('응답소_2015_01.txt')
data1
place <- sapply(data1, extractNoun, USE.NAMES = F)
place
head(unlist(place), 30)
cdata <- unlist(place)
cdata
place <- str_replace_all(cdata,'[^[:alpha:]]','')
place
place <- gsub(' ','',place)
txt <- readLines('서울응답소gsub.txt')
place <- str_replace_all(cdata,'[^[:alpha:]]', '')
place
place <- gsub(' ','',place)
txt <- readLines('서울응답소gsub.txt')
getwd()
data1 <- readLines('응답소_2015_01.txt')
data1
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2
data3 <- unlist(data2)
data3 <- Filter(function(x) {nchar(x)<=10}, data3)
head(unlist(data3), 30)
data3 <- gsub('\\d+','',data3)
data3
library(stringr)
data2 <- str_replace_all(data3,'[^[:alpha:]]','')
data2 <- gsub(' ','',data2)
mergeUserDic(data.frame(readLines('응답하라.txt'), 'ncn'))
mergeUserDic(data.frame(readLines('응답하라.txt'), 'ncn'))
mergeUserDic(data.frame(readLines('응답하라.txt'), 'ncn'))
mergeUserDic(data.frame(readLines('응답하라.txt'), 'ncn'))
mergeUserDic(data.frame(readLines('제주도여행지.txt'), 'ncn'))
# 예제 1-3 제주도 추천 여행코스
setwd('D:/Heechul/R/R_Lecture/part2/stage1_Word Cloud/Ex3')
mergeUserDic(data.frame(readLines('제주도여행지.txt'), 'ncn'))
# 연습문제
# 1
setwd('D:/Heechul/R/R_Lecture/part2/stage1_Word Cloud/Exercise')
mergeUserDic(data.frame(readLines('응답하라.txt'), 'ncn'))
data1 <- readLines('응답소_2015_01.txt')
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2
head(unlist(data2), 50)
data3 <- unlist(data2)
data3
data3 <- gsub('\\d+','', data3)
data3 <- gsub('서울시','', data3)
data3 <- gsub('서울','', data3)
data3 <- gsub('요청','', data3)
data3 <- gsub('제안','', data3)
data3 <- gsub('개선','', data3)
data3 <- gsub('문제','', data3)
data3 <- gsub('관리','', data3)
data3 <- gsub('민원','', data3)
data3 <- gsub('이용','', data3)
data3 <- gsub('관련','', data3)
data3 <- gsub('시장','', data3)
data1 <- readLines('응답소_2015_01.txt')
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2
data3(unlist(data2), 50)
head(unlist(data2), 50)
data3 <- unlist(data2)
data2 <- str_replace_all(data3, '[^[:alpha:]]', '')
data2 <- gsub(' ','', data2)
txt <- readLines('응답했니gsub.txt')
txt
cnt_txt <- length(txt)
cnt_txt
i <- 1
for(i in 1:cnt_txt) {
data2 <- gsub((txt[i]),'',data2)
}
data2
data2 <- Filter(function(x){mchar(x) >= 2}, data2)
data2 <- Filter(function(x){nchar(x) >= 2}, data2)
write(unlist(data2), 'reply_2.txt')
rev <- read.table('reply_2.txt')
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 30)
library(RColorBrewer)
palete <- brewer.pal(9, 'Set1')
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
head(sort(wordcount, decreasing = T), 100)
palete <- brewer.pal(9, 'Set1')
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.25, min.freq = 2,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.3, min.freq = 3,
random.order = F, random.color = T, colors = palete)
palete <- brewer.pal(9, 'Set3')
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.3, min.freq = 3,
random.order = F, random.color = T, colors = palete)
legend(0.3, 1, '2015년도 응답소의 핫한 질문', cex=0.8, fill=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.3, min.freq = 3,
random.order = F, random.color = T, colors = palete)
legend(0.3, 0.8, '2015년도 응답소의 핫한 질문', cex=0.8, fill=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.3, 0.8,'2015년도 응답소의 핫한 질문', cex=0.8, fill=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 0.8,'2015년도 응답소의 핫한 질문', cex=0.8, fill=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.3, min.freq = 3,
random.order = F, random.color = T, colors = palete)
reply <- readLines('응답소_2015.txt')
replynoun <- sapply(reply, extractNoun, USE.NAMES = F)
reply2 <- sapply(reply, extractNoun, USE.NAMES = F)
reply2
head(unlist(reply2), 30)
cdata <- unlist(reply2)
reply2 <- str_replace_all(cdata, '[^[:alpha:]]', '')
reply2 <- gsub(' ','', reply2)
txt <- readLines('응답했니gsub.txt')
txt <- readLines('응답했니gsub.txt')
txt
cnt_txt <- length(txt)
cnt_txt
i <- 1
for(i in 1:cnt_txt) {
reply2 <- gsub((txt[i]),'',reply2)
}
reply2
reply2 <- Filter(function(x){nchar(x) >= 2}, reply2)
write(unlist(reply2), 'reply_2.txt')
rev <- read.table('reply_2.txt')
nrow(rev)
reply2
head(unlist(reply2), 50)
# Stringr를 사용해서 단어 지우기
txt <- readLines('응답했니gsub.txt')
txt
cnt_txt <- length(txt)
cnt_txt
i <- 1
reply2 <- gsub((txt[i]),'',reply2)
reply2
reply2 <- Filter(function(x){nchar(x) >= 2}, reply2)
reply2
reply2 <- Filter(function(x){nchar(x) >= 2 & nchar(x) <=7}, reply2)
reply2
write(unlist(reply2), 'reply_2.txt')
rev <- read.table('reply_2.txt')
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing = T), 20)
head(sort(wordcount, decreasing = T), 100)
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.3, min.freq = 10,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.3, min.freq = 100,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.3, min.freq = 100,
random.order = F, random.color = T, colors = palete)
palete <- brewer.pal(9, 'RdYIBy')
palete <- brewer.pal(9, 'RdBu')
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.3, min.freq = 100,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale=c(5,2), rot.per = 0.3, min.freq = 100,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale=c(3,1), rot.per = 0.3, min.freq = 100,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale=c(3,1), rot.per = 0.1, min.freq = 100,
random.order = F, random.color = T, colors = palete)
legend(0.2, 0.8,'2015년도 응답소의 핫한 질문', cex=0.8, fill=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 1,'2015년도 응답소의 핫한 질문', cex=0.8, fill=NA, bg='white',
text.col='red', text.font=2, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale=c(3,1), rot.per = 0.1, min.freq = 100,
random.order = F, random.color = T, colors = palete)
legend(0.2, 0.9,'2015년도 응답소의 질문 빈도', cex=0.8, fill=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 0.9,'2015년도 응답소의 질문 빈도', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=2, box.col='red')
legend(0.2, 0.9,'2015년도 응답소의 질문 빈도', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=3, box.col='red')
legend(0.2, 0.9,'2015년도 응답소의 질문 빈도', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=1, box.col='red')
wordcloud(names(wordcount), freq = wordcount, scale=c(3,1), rot.per = 0.1, min.freq = 100,
random.order = F, random.color = T, colors = palete)
legend(0.2, 0.9,'2015년도 응답소의 질문 빈도', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=1, box.col='red')
legend(0.2, 0.9,'2015년도 응답소의 질문 빈도', cex=1, fill=NA, border=NA, bg='white',
text.col='red', text.font=1, box.col='red')
legend(0.2, 0.9,'2015년도 응답소의 질문 빈도', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=1, box.col='red',ITY=1)
legend(0.2, 0.9,'2015년도 응답소의 질문 빈도', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=1, box.col='red',lty=1)
wordcloud(names(wordcount), freq = wordcount, scale=c(3,1), rot.per = 0.1, min.freq = 100,
random.order = F, random.color = T, colors = palete)
legend(0.2, 0.9,'2015년도 응답소의 질문 빈도', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=1, box.col='red')
reply01 <- readLines('응답소_2015_01.txt')
reply02 <- sapply(reply01, extractNoun, USE.NAMES = F)
reply011 <- sapply(reply01, extractNoun, USE.NAMES = F)
replay01data <- unlist(reply011)
replay01data <- unlist(reply011)
reply011<- str_replace_all(reply01data, '[^[:alpha:]]', '')
reply01 <- readLines('응답소_2015_01.txt')
reply_1 <- readLines('응답소_2015_01.txt')
reply_11 <- sapply(reply_1, extractNoun, USE.NAMES = F)
replay_111 <- unlist(reply_11)
reply_11<- str_replace_all(reply_111, '[^[:alpha:]]', '')
head(unlist(reply_11), 30)
replay_111 <- unlist(reply_11)
reply_11<- str_replace_all(reply_111, '[^[:alpha:]]', '')
library(stringr)
reply_11<- str_replace_all(reply_111, '[^[:alpha:]]', '')
replay_111 <- unlist(reply_11)
reply_111 <- unlist(reply_11)
reply_11<- str_replace_all(reply_111, '[^[:alpha:]]', '')
reply_11 <- gsub(' ','', reply_11)
reply_11
write(unlist(reply_11), 'reply_201501.txt')
rep01 <- read.table('reply_201501.txt')
rep01
reply_2 <- readLines('응답소_2015_02.txt')
reply_22 <- sapply(reply_2, extractNoun, USE.NAMES = F)
head(unlist(reply_22), 30)
reply_222 <- unlist(reply_11)
reply_222 <- unlist(reply_22)
reply_22<- str_replace_all(reply_222, '[^[:alpha:]]', '')
reply_22 <- gsub(' ','', reply_22)
reply_22
write(unlist(reply_22), 'reply_201502.txt')
rep01 <- read.table('reply_201502.txt')
rep01 <- read.table('reply_201501.txt')
rep01
rep02 <- read.table('reply_201502.txt')
rep02
reply_3 <- readLines('응답소_2015_03.txt')
reply_33 <- sapply(reply_3, extractNoun, USE.NAMES = F)
head(unlist(reply_33), 30)
reply_333 <- unlist(reply_33)
reply_33<- str_replace_all(reply_333, '[^[:alpha:]]', '')
reply_33 <- gsub(' ','', reply_33)
write(unlist(reply_33), 'reply_201503.txt')
rep03 <- read.table('reply_201503.txt')
rep03
reply_4 <- readLines('응답소_2015_04.txt')
reply_44 <- sapply(reply_4, extractNoun, USE.NAMES = F)
head(unlist(reply_44), 30)
reply_444 <- unlist(reply_44)
reply_44<- str_replace_all(reply_444, '[^[:alpha:]]', '')
reply_44 <- gsub(' ','', reply_44)
write(unlist(reply_44), 'reply_201504.txt')
rep04 <- read.table('reply_201504.txt')
reply_5 <- readLines('응답소_2015_05.txt')
reply_55 <- sapply(reply_5, extractNoun, USE.NAMES = F)
head(unlist(reply_55), 30)
reply_555 <- unlist(reply_55)
reply_55<- str_replace_all(reply_555, '[^[:alpha:]]', '')
reply_55 <- gsub(' ','', reply_55)
write(unlist(reply_55), 'reply_201505.txt')
rep05 <- read.table('reply_201505.txt')
reply_6 <- readLines('응답소_2015_06.txt')
reply_66 <- sapply(reply_6, extractNoun, USE.NAMES = F)
head(unlist(reply_66), 30)
reply_666 <- unlist(reply_66)
reply_66<- str_replace_all(reply_666, '[^[:alpha:]]', '')
reply_66 <- gsub(' ','', reply_66)
write(unlist(reply_66), 'reply_201506.txt')
rep06 <- read.table('reply_201506.txt')
rep06
union(rep01, rep02)
rep <- union(rep01, rep02)
write(unlist(rep), 'rep2015.txt')
rep
unlist(rep)
vec1 <- 1:4
vec2 <- 3:5
union(vec1, vec2)
write(rep, 'rep2015.txt')
write(list(rep), 'rep2015.txt')
write(unlist(rep), 'rep2015.txt')
reppp <- read.table('rep2015.txt')
rep06
rep01
rep02
rep <- union(rep01, rep02)
rep
unlist(rep)
reply_1 <- readLines('응답소_2015_01.txt')
reply_11 <- sapply(reply_1, extractNoun, USE.NAMES = F)
reply_11
head(unlist(reply_11), 30)
reply_111 <- unlist(reply_11)
reply_111
reply_11 <- str_replace_all(reply_111, '[^[:alpha:]]', '')
reply_11 <- gsub(' ','', reply_11)
reply_11
write(unlist(reply_11), 'reply_201501.txt')
rep01 <- read.table('reply_201501.txt')
rep01
rep <- union(rep01, rep02)
rep
rep000 <- union(rep01, rep02)
rep <- sapply(rep000, extractNoun, USE.NAMES = F)
head(unlist(rep), 30)
rep111 <- unlist(rep)
rep<- str_replace_all(reply111, '[^[:alpha:]]', '')
rep<- str_replace_all(rep111, '[^[:alpha:]]', '')
rep <- gsub(' ','', rep)
rep
write(unlist(rep), 'rep2015.txt')
totalrep <- read.table('rep2015.txt')
totalrep
rep000 <- union(rep01, rep02, rep03, rep04, rep05, rep06)
vec3 <- 1:10
union( vec1, vec2, vec3)
rep000 <- union(rep01, rep02)
rep001 <- union(rep01, rep02)
rep002 <- union(rep001, rep03)
rep003 <- union(rep002, rep04)
rep004 <- union(rep003, rep04)
rep004 <- union(rep003, rep05)
rep <- union(rep004, rep06)
rep <- sapply(rep000, extractNoun, USE.NAMES = F)
head(unlist(rep), 30)
rep111 <- unlist(rep)
rep<- str_replace_all(rep111, '[^[:alpha:]]', '')
rep <- gsub(' ','', rep)
rep
write(unlist(rep), 'rep2015.txt')
totalrep <- read.table('rep2015.txt')
totalrep
txt <- readLines('응답했니gsub.txt')
txt <- readLines('응답했니gsub.txt')
txt1 <- readLines('응답했니gsub.txt')
txt <- readLines('응답했니gsub.txt')
txt <- readLines('응답했니gsub.txt')
txt
cnt_txt <- length(txt)
cnt_txt
i <- 1
for(i in 1:cnt_txt) {
totalrep <- gsub((txt[i]),'',totalrep)
}
totalrep
totalrep
totalrep <- read.table('rep2015.txt')
totalrep
toralrep <- Filter(function(x){nchar(x) >= 2 & nchar(x) <=5}, totalrep)
totalrep
txt
i <- 1
for(i in 1:cnt_txt) {
totalrep <- gsub((txt[i]),'',totalrep)
}
totalrep
totalrep <- read.table('rep2015.txt')
totalrep
head(sort(totalrep, decreasing = T), 50)
wordcount <- table(totalrep)
totalrep
head(sort(wordcount, decreasing = T), 50)
txt <- readLines('응답했니gsub.txt')
txt <- readLines('응답했니gsub.txt')
txt
cnt_txt <- length(txt)
cnt_txt
i <- 1
for(i in 1:cnt_txt) {
totalrep <- gsub((txt[i]),'',totalrep)
}
totalrep
totalrep
totalrep <- read.table('rep2015.txt')
totalrep
wordcount <- table(totalrep)
totalrep
head(sort(wordcount, decreasing = T), 50)
totalrep <- gsub('\\d+','', totalrep)
totalrep <- gsub('한','', totalrep)
totalrep <- gsub('것','', totalrep)
totalrep <- gsub('수','', totalrep)
totalrep <- gsub('들','', totalrep)
totalrep <- gsub('님','', totalrep)
totalrep <- gsub('Q','', totalrep)
totalrep <- gsub('저','', totalrep)
totalrep <- gsub('일','', totalrep)
totalrep <- gsub('년','', totalrep)
totalrep
data1 <-readLines('응답소_2015_01.txt')
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2
head(unlist(data2), 30)
cdata <- unlist(data2)
cdata
data2 <- str_replace_all(cdata, '[^[:alpha:]]', '')
data2 <- gsub(' ','', data2)
data2
txt
txt <- readLines('응답했니gsub.txt')
cnt_txt <- length(txt)
cnt_txt
i <- 1
for(i in 1:cnt_txt) {
data2 <- gsub((txt[i]),'',data2)
}
data2
data2 <- Filter(function(x){nchar(x) >= 2 & nchar(x) <=5}, data2)
data2
write(unlist(data2), 'data2.txt')
rep <- read.table('data2.txt')
nrow(rep)
wordcount <- table(rep)
head(sort(wordcount, decreasing = T), 100)
palete <- brewer.pal(9, 'RdBu')
wordcloud(names(wordcount), freq = wordcount, scale=c(3,1), rot.per = 0.1, min.freq = 100,
random.order = F, random.color = T, colors = palete)
data2
data1 <-readLines('응답소_2015_01.txt')
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2
cdata <- unlist(data2)
cdata
data2 <- str_replace_all(cdata, '[^[:alpha:]]', '')
data2 <- gsub(' ','', data2)
data2
txt <- readLines('응답했니gsub.txt')
txt
cnt_txt <- length(txt)
cnt_txt
i <- 1
for(i in 1:cnt_txt) {
data2 <- gsub((txt[i]),'',data2)
}
data2
data2 <- Filter(function(x){nchar(x) >= 2}, data2)
data2
write(unlist(data2), 'data2.txt')
rep <- read.table('data2.txt')
nrow(rep)
wordcount <- table(rep)
head(sort(wordcount, decreasing = T), 20)
palete <- brewer.pal(9, 'RdBu')
palete <- brewer.pal(9, 'Set1')
wordcloud(names(wordcount), freq = wordcount, scale=c(3,1), rot.per = 0.1, min.freq = 100,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.1, min.freq = 100,
random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq = wordcount, scale=c(5,1), rot.per = 0.1, min.freq = 5,
random.order = F, random.color = T, colors = palete)
legend(0.2, 0.9,'2015년도 1월 응답소의 질문 빈도', cex=0.8, fill=NA, border=NA, bg='white',
text.col='red', text.font=1, box.col='red')
