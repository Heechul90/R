print(x)
for(k in 1:9) {
x <- paste(i, '*', K, '=', i*k)
print(x)
}
}
for (i in 2:9) {
x <- paste(i, '단')
print(x)
for(k in 1:9) {
x <- paste(i, '*', K, '=', i*k)
print(x)
}
}
for (i in 2:9) {
x <- paste(i, '단')
print(x)
for(k in 1:9) {
x <- paste(i, '*', k, '=', i*K)
print(x)
}
}
for (i in 2:9) {
line <- str_c(i, '단')
print(line)
for (k in 1:9) {
line <- str_c(i, ' * ', k, ' = ', i*k)
print(line)
}
}
for (i in 2:9) {
line <- paste(i, '단')
print(line)
for(k in 1:9) {
line <- paste(i, '*', k, '=', i*K)
print(line)
}
}
for (i in 2:9) {
line <- paste(i, '단')
print(line)
for(k in 1:9) {
line <- paste(i, '*', k, '=', i*k)
print(line)
}
}
for (i in 2:9) {
line <- paste(i, '단')
print(line)
for(k in 1:9) {
line <- paste(i, '*', k, '=', i*k)
print(line)
}
}
for(i in 2:9) {
print(i)
}
for(i in 2:9) {
gugudan <- paste(i, '단')
print(i)
}
for(i in 2:9) {
gugudan <- paste(i, '단')
print(gugudan)
}
for(i in 2:9) {
gugudan <- paste(i, '단')
print(gugudan)
for(k in 1:9) {
ggg <- paste(i, '*', k, '=', i*k)
print(ggg)
}
}
gg <- function(x) {
for(i in 2:9) {
gugudan <- paste(i, '단')
print(gugudan)
for(k in 1:9) {
ggg <- paste(i, '*', k, '=', i*k)
print(ggg)
}
}
}
gg(1)
while (T) {
for (i in 1:4) {
line <- ''
if (i != 4) {
for (k in 1:(3 - (i - 1)))
line <- str_c(line, ' ')
}
for (k in 1:(2*i - 1))
line <- str_c(line, '#')
print(line)
}
for (i in 3:1) {
line <- ''
for (k in 1:(3 - (i - 1)))
line <- str_c(line, ' ')
for (k in 1:(2*i - 1))
line <- str_c(line, '#')
print(line)
}
break;
}
d <- paste(!)
while(w<4) {
d <- paste(!)
print(d)
}
while(w<4) {
d <- w
print(d)
}
print(w)
while(w<4) {
print(w)
}
w <- 0
while(w<4) {
print(w)
}
### 예제 2-2. 고객 불만 게시판 분석 후 결과를 그래프로 표시하기
setwd('D:/Heechul/R/R_Lecture/part2/stage2/ex2-2')
install.packages('KoNLP')     # 한국어 관련 작업을 할때 필요한 패키지
install.packages('wordcloud')
install.packages('stringr')
install.packages('ggplot2')
install.packages('dplyr')
install.packages('coord')
library(KoNLP)
library(wordcloud)
library(stringr)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
useSejongDic()
myray <- readLines('data/new_myray.txt')
myray
myray <- sapply(myray, extractNoun, USE.NAMES = F)
myray
myray <- unlist(myray)
myray
myray <- Filter(function(x) {nchar >=2}, myray)
myray <- Filter(function(x) {nchar(x) >=2}, myray)
myray
myray <- gsub(' ','-', myray)
myray <- gsub(' ','-', myray)
myray <- gsub(' ','-', myray)
myray <- gsub(' ','-', myray)
myray <- gsub('교체','', myray)
myray <- gsub('작동','', myray)
myray <- gsub('교환','', myray)
myray <- gsub('ㅠㅠ','', myray)
myray <- gsub('\\d+','', myray)
myray <- gsub('\\.','', myray)
myray
write(unlist(myray), 'myray_2.txt')
rev <- read.table('myray_2.txt')
rev
nrow(rev)
wordcount <- table(rev)
wordcount
brewer.pal.info
palete <- brewer.pal(9, 'YlGnBu')
wordcloud(names(wordcount),freq=wordcount,scale=c(4,0.1),rot.per=0.25,min.freq=5,
random.order=F,random.color=T,colors=palete)
wordcloud(names(wordcount), freq=wordcount, scale=c(5,1), rot.per = 025,
min.freq = 2, random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq=wordcount, scale=c(3,1), rot.per = 025,
min.freq = 2, random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq=wordcount, scale=c(3,0.3), rot.per = 025,
min.freq = 2, random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq=wordcount, scale=c(3,0.3), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
wordcloud(names(wordcount), freq=wordcount, scale=c(2,0.3), rot.per = 0.25,
min.freq = 2, random.order = F, random.color = T, colors = palete)
top10 <- head(sort(wordcount, decreasing = T), 10)
top10
df_top10 <- data.frame(top10)
df_top10
ggplot(df_top10, aes(x=rev, y=Freq, fill=palete)) +
geom_bar(stat = 'identity')
brewer.pal.info
palete <- brewer.pal(11, 'Spectral')
ggplot(df_top10, aes(x=rev, y=Freq, fill=palete)) +
geom_bar(stat = 'identity')
palete <- brewer.pal(10, 'Spectral')
ggplot(df_top10, aes(x=rev, y=Freq, fill=palete)) +
geom_bar(stat = 'identity')
ggplot(df_top10, aes(x=rev, y=Freq, fill=palete)) +
geom_bar(stat = 'identity') +
ggtitle('프로포즈 선물 TOP 10') +
colors <-c()
ggplot(df_top10, aes(x=rev, y=Freq, fill=palete)) +
geom_bar(stat = 'identity') +
ggtitle('프로포즈 선물 TOP 10') +
colors <- c()
colors <- c()
colors <- c()
}
for(i in 1:length(top10)) {
if(top10[i] >=8) {
colors <- c(colors, 'red')
} else if(top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
ggplot(top10, aes(x=rev, y=Freq, fill=palete)) +
geom_bar(stat = 'identity') +
ggtitle('프로포즈 선물 TOP 10') +
colors <- c()
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('프로포즈 선물 TOP 10')
ggplot(df_top10, aes(x=rev, y=Freq)) +
geom_bar(stat = 'identity', col=colors) +
ggtitle('고객 분만 상위 TOP 10')
fill
ggplot(df_top10, aes(x=rev, y=Freq, col=colors)) +
geom_bar(stat = 'identity', fill=colors) +
ggtitle('고객 분만 상위 TOP 10')
df_top10
colors <- c()
i <- 1
for(i in 1:length(df_top10)) {
if(df_top10[i] >=8) {
colors <- c(colors, 'red')
} else if(df_top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
for(i in 1:length(top10)) {
if(top10[i] >=8) {
colors <- c(colors, 'red')
} else if(top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
top10
df_top10 <- data.frame(top10)
df_top10
ggplot(df_top10, aes(x=rev, y=Freq, col=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
top10
c(1)
i <-1
for(i in 1:length(top10)) {
if(top10[i] >=8) {
colors <- c(colors, 'red')
} else if(top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
colors <- c()
i <-1
for(i in 1:length(top10)) {
if(top10[i] >=8) {
colors <- c(colors, 'red')
} else if(top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
df_top10
top10[,2]
top10[1,2]
df_top10[,2]
if(df_top10[,2] >=8) {
colors <- c(colors, 'red')
} else if(df_top10[,2] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
colors <- c()
i <-1
length(df_top10[,2])
if(top10 >=8) {
colors <- c(colors, 'red')
} else if(top10 >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
for(i in 1:length(df_top10[,2])) {
if(top10 >=8) {
colors <- c(colors, 'red')
} else if(top10 >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
top10
if(top10 >=8) {
colors <- c(colors, 'red')
} else if(top10 >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
i <-1
for(i in 1:length(top10)) {
if(top10 >=8) {
colors <- c(colors, 'red')
} else if(top10 >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
colors <- c()
i <-1
for(i in 1:length(top10)) {
if(top10 >=8) {
colors <- c(colors, 'red')
} else if(top10 >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
top10
colors <- c()
i <-1
for(i in 1:length(top10)) {
if(top10 >=8) {
colors <- c(colors, 'red')
} else if(top10 >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
top10 <- head(sort(wordcount, decreasing = T), 10)
top10
colors <- c()
for(i in 1:length(top10)) {
if(top10 >=8) {
colors <- c(colors, 'red')
} else if(top10 >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
length(top10)
if(top10[i] >=8) {
colors <- c(colors, 'red')
} else if(top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
colors <- c()
i <-1
for(i in 1:length(top10)) {
if(top10[i] >=8) {
colors <- c(colors, 'red')
} else if(top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
top10
if(df_top10[i] >=8) {
colors <- c(colors, 'red')
} else if(df_top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
if(df_top10[,i] >=8) {
colors <- c(colors, 'red')
} else if(df_top10[,i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
if(df_top10[,2] >=8) {
colors <- c(colors, 'red')
} else if(df_top10[,2] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
for(i in 1:length(top10)) {
if(top10[i] >=8) {
colors <- c(colors, 'red')
} else if(top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
barplot(top10, main="고객 불만 사항 상위 TOP 10",
ylab="불만건수", names.arg=names(top10),
col=colors, las=2, ylim=c(0,13))
df_top10 <- data.frame(top10)
ggplot(top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
for(i in 1:length(top10)) {
if(top10[i] >=8) {
colors <- c(colors, 'red')
} else if(top10[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
}
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
ggplot(df_top10, aes(x=rev, y=Freq, fill=df_top10)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
color_df_top10 <- df_top10 %>%
mutate(color = colors)
color_df_top10 <- df_top10 %>%
mutate(color = colors())
color_df_top10 <- df_top10 %>%
mutate(color = c(colors))
df_top10
color_df_top10 <- df_top10 %>%
mutate(color = for(i in 1:length(Freq)) {
if(Freq >=8) {
colors <- c(colors, 'red')
} else if(Freq >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
})
if(Freq[i] >=8) {
colors <- c(colors, 'red')
} else if(Freq[i] >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
}
color_df_top10 <- df_top10 %>%
mutate(color = if(Freq>=8) {
colors <- c(colors, 'red')
} else if(Freq >= 6) {
colors <- c(colors, 'yellow')
} else {
colors <- c(colors, 'green')
})
ggplot(df_top10, aes(x=rev, y=Freq, fill=rev)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
ggplot(df_top10, aes(x=rev, y=Freq, fill=colors)) +
geom_bar(stat = 'identity') +
ggtitle('고객 분만 상위 TOP 10')
barplot(top10, main="고객 불만 사항 상위 TOP 10",
ylab="불만건수", names.arg=names(top10),
col=colors, las=2, ylim=c(0,13))
abline(h=7, col='red', lty=2, lwd=2)
abline(h=5, col='red', lty=2, lwd=2)
abline(h=7, col='red', lty=5, lwd=2)
barplot(top10, main="고객 불만 사항 상위 TOP 10",
ylab="불만건수", names.arg=names(top10),
col=colors, las=2, ylim=c(0,13))
abline(h=7, col='red', lty=1, lwd=5)
abline(h=5, col='red', lty=2, lwd=4)
abline(h=5, col='red', lty=2, lwd=4)
abline(h=5, col='red', lty=2, lwd=3)
barplot(top10, main="고객 불만 사항 상위 TOP 10",
ylab="불만건수", names.arg=names(top10),
col=colors, las=2, ylim=c(0,13))
abline(h=7, col='red', lty=1, lwd=5)
abline(h=6, col='red', lty=2, lwd=4)
abline(h=5, col='red', lty=2, lwd=3)
abline(h=4, col='red', lty=2, lwd=2)
abline(h=3, col='red', lty=2, lwd=1)
