sum <- sum+i
}
}
print(sum)
sum <- 0
for(i in 1:1003) {
if(i%%3==0) {
sum <- sum+i
}
}
print(sum)
sum <- 0
for (i in 3:100) {
if( i%% 3 == 0)
sum <- sum+i
}
sum <- 0
for (i in 3:100) {
if( i%% 3 == 0)
sum <- sum+i
}
print(sum)
multiple <- function(limit, number) {
sum <- 0
for (i in 1:limit) {
if(i %% number == 0)
sum <- sum+i
}
print(sum)
}
multiple(1000,4)
sum <- 0
for (i in 3:1000) {
if( i%% 4 == 0)
sum <- sum+i
}
print(sum)
sum <- 0
for(i in 1:100) {
if(i%%3==0) {
sum <- sum+i
}
}
print(sum)
# 연습문제
# 1-1
# 1-2
var1 <- read.txt('채소.txt')
# 연습문제
# 1-1
# 1-2
var1 <- read.txt('채소')
library(stringr)
for (i in 1:5) {
line <- ''
for(k in 1:i) {
line <- str_c(line, '#')
}
print(line)
}
for (i in 5:1) {
line <- ''
for(k in 1:i) {
line <- str_c(line, '#')
}
print(line)
}
for (i in 5:1) {
line <- ''
for(k in i:1) {
line <- str_c(line, '#')
}
print(line)
}
for (i in 5:1) {
line <- ''
for(k in i:1) {
line <- str_c(line, '#')
}
print(line)
}
for (i in 5:1) {
line <- ''
for(k in 1:i) {
line <- str_c('#', line)
}
print(line)
}
for (i in 1:5) {
line <- ''
for(k in 1:5-i) {
line <- str_c(line, '#')
}
print(line)
}
for (i in 1:5) {
line <- ''
for(k in 1:5-i) {
line <- str_c(line, '')
} for(k in 5:k) {
line <- str_c(line, '#')
}
for (i in 1:5) {
line <- ''
for(k in 1:5-i) {
line <- str_c(line, '')
} for(k in 5-i:5) {
line <- str_c(line, '#')
}
print(line)
}
for (i in 1:5) {
line <- ''
for(k !=1) {
for(k in 1:i)
line <- str_c(line, '')
} for(k in i:5) {
line <- str_c(line, '#')
}
print(line)
}
for (i in 1:5) {
line <- ''
for(k !=1) {
for(k in 1:i-1)
line <- str_c(line, '')
} for(k in i:5) {
line <- str_c(line, '#')
}
print(line)
}
for (i in 1:5) {
line <- ''
if(k !=1) {
for(k in 1:(i-1))
line <- str_c(line, '')
} for(k in i:5) {
line <- str_c(line, '#')
}
print(line)
}
for (i in 1:5) {
line <- ''
if(i !=1) {
for(k in 1:(i-1))
line <- str_c(line, '')
}
for(k in i:5) {
line <- str_c(line, '#')
}
print(line)
}
# 연습문제
# 구구단만들기
for (i in 1:9) {
line <- str_c(line,i)
}
# 연습문제
# 구구단만들기
for (i in 1:9) {
line <- str_c(line,i)
print(line)
}
}
gugudan <- function(x) {
if(x==2) {
for(i in 1:9) {
print(2, '*', i, '=', (2*i))
}
}
}
gugudan <- function(x) {
if(x==2) {
for(i in 1:9) {
print(2, '*', i, '=', (2*i))
}
}
}
gugudan
ex1 <- function(x) {
if(x==2) {
for(i in 1:9)
}
print(i)
}
print(x)
ex1 <- function(x) {
if(x==2) {
for(i in 1:9)
sum <- sum+i
}
print(sum)
}
2
print(2, "*", 2)
ex1 <- function(x) {
if(x==2) {
for(i in 1:9)
gugu <- sum+i
}
print(gugu)
}
2
ex1(2)
ex1 <- function(x) {
for(i in 1:x) {
print(i)
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(i)
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
cat(2, '*', i, '=', (2*i))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
cat(2, '*', i, '=', 2*i)
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(2, '*', i, '=', 2*i))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(2, '*', i, '=', (2*i)))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(2, '*', i, '=', '2*i'))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(2, '*', i, '=', i))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
(cat(2, '*', i, '=', i)
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
(cat(2, '*', i, '=', i))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
(cat(2, '*', i, '=', i*2))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print((cat(2, '*', i, '=', i*2)))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print((cat(2, '*', i, '=', i*x)))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print((cat(2, '*', i, '=', i*x)))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(2, '*', i, '=', (i*x)))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(2, '*', i, '=', (i*x)))
}
}
if(x==3) {
for (i in 1:9) {
print(cat(3, '*', i, '=', (i*x)))
}
}
}
ex1(2)
ex1(3)
ex1 <- for(x in 2:9) {
function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
}
}
ex1(3)
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(2, '*', i, '=', (i*x)))
}
}
}
ex1(2)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==3) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==4) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==5) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
}
ex1(3)
ex1(5)
ex1 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==3) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==4) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==5) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==6) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==7) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==8) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
if(x==9) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
}
ex1(9)
ex1(7)
ex11 <- function(x) {
if(x==2) {
for (i in 1:9) {
print(cat(x, '*', i, '=', (i*x)))
}
}
}
ex11(2)
ex11(3)
ex11 <- for(i in 2:9) {
for(k in 1:9) {
print(cat(i, '*', k, '=', i*k))
}
}
ex11 <- for(i in 2:9) {
for(k in 1:9) {
print(i, '*', k, '=', i*k)
}
}
ex11 <- for(i in 2:9) {
for(k in 1:9) {
cat(print(i, '*', k, '=', i*k))
}
}
ex11 <- for(i in 2:9) {
for(k in 1:9) {
print(cat(i, '*', k, '=', i*k))
}
}
ex11 <- for(i in 2:9) {
for(k in 1:9) {
print(cat(i, '*', k, '=', (i*k)))
}
}
ex2
ex11
for (i in 1:5) {
line <- ''
if(i !=1) {
for(k in 1:(i-1))
line <- str_c(line, '')
}
for(k in i:5) {
line <- str_c(line, '#')
}
print(line)
}
ex2 <- for(i in 1:7)
ex2
rm(list=ls())
char <-c('apple', 'Apple', 'APPLE', 'banana', 'grape')
grep('apple', char)
char2 <-  c('apple', 'banana')
grep(char2, char)
grep(paste(char2,collapse='|'), char1, value=T)
grep(char2, char)
grep(paste(char2, collapse='|'), char1, value=T)
grep('pp', char)
grep('pp', char, value = T)
grep(paste(char2, collapse = '|'), char, value = T)
grep('^A', char, value = T)
grep('e$', char, value = T)
char2 <- c('grape1', 'apple1', 'apple', 'orange', 'Apple')
grep('ap', char2, value = T)
grep('[1-9]', char2, value = T)
grep('[[:upper]]', char2, value = T)
grep('[A-Z]', char2, value = T)
# nchar 입력된 배열이나 문자열의 길이를 알려줌줌
char
nchar(char)
nchar('James Seo')
nchar('서진수"')
nchar('서진수')
# paste  paste('a', 'b', 'c') a,b,c 를 합쳐서 하나의 문자열처럼 출력
paste('Seo', 'Jin', 'Su')
paste('Seo', 'Jin', 'Su', sep='')
paste('Seo', 'Jin', 'Su', sep='/')
paste('I', '\m', 'Hungry')
paste('I', '\'m', 'Hungry')
# substr 특정 부분만 골라내 줘잉잉
substr('abc123',3,3)
substr('abc123',3,4)
# 특정 글자를 기준으로 분리해라잉잉
strsplit('2014/11/22', split='/')
# 특정 패턴들을 쉽게 찾아 줘잉잉
grep('-', '010-8706-4712')
regexpr('-', '010-8706-4712')
attr(,'match.length')
attr(,'useBytes')
