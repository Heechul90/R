# 문제7-3
mpg4 <- mpg3 %>%
select(manufacturer, cty, hwy, 합산연비변수) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
# 문제 7-4
mpg
# 문제7-3
mpg4 <- mpg3 %>%
select(manufacturer, cty, hwy, 합산연비변수) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
# 문제 7-4
mpg
# 문제7-3
mpg4 <- mpg3 %>%
select(manufacturer, cty, hwy, 합산연비변수) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
# 문제 7-4
mpg
# 문제7-3
mpg4 <- mpg3 %>%
select(manufacturer, cty, hwy, 합산연비변수) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
# 문제 7-4mpg\
mpg
mpg
mpg %>%
select(manufacturer, cty, hwy)
mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy)
mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy) %>%
mutate(평균연비변수 = 합산연비변수/2)
# 문제2
mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), cty) # 각 제조사의 cty의 평균
# 문제3
hwy1 <- mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), hwy) # 각 제조사의 hwy의 평균
# 문제3
mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), hwy) # 각 제조사의 hwy의 평균
hwy2 <- filter(hwy1, manufacturer %in% c('chevrolet','ford', 'honda'))
hwy2 # chevrolet, ford, honda 각각의 hwy의 평균
hwy2 # chevrolet, ford, honda 각각의 hwy의 평균
hwy1 %>%
summarise_each(funs(mean), hwy) # chevrolet, ford, honda의 hwy의 평균
hwy2 <- filter(hwy1, manufacturer %in% c('chevrolet','ford', 'honda'))
# 문제3
mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), hwy) # 각 제조사의 hwy의 평균
# 문제3
hwy <- mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), hwy) # 각 제조사의 hwy의 평균
# 문제3
hwy <- mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), hwy) # 각 제조사의 hwy의 평균
# 문제3
hwy1 <- mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), hwy) # 각 제조사의 hwy의 평균
hwy1
hwy2 <- filter(hwy1, manufacturer %in% c('chevrolet','ford', 'honda'))
hwy2 # chevrolet, ford, honda 각각의 hwy의 평균
hwy1 %>%
summarise_each(funs(mean), hwy) # chevrolet, ford, honda의 hwy의 평균
mpg1 <- select(mpg, class, cty)
# 문제4
mpg
mpg1 # class, cty로만 구성
mpg1 <- select(mpg, class, cty)
# 문제4
mpg
mpg1 <- select(mpg, manufacturer, class, cty)
mpg1 # class, cty로만 구성
# 문제5
mpg %>%
group_by(class) %>%
summarise_each(funs(mean),cty ) # class 별로 cty 평균 연비
# 문제5
mpg %>%
group_by(class) %>%
summarise_each(funs(mean),cty ) %>% # class 별로 cty 평균 연비
arrange(desc(cty))
# 문제6
mpg %>%
filter(manufacturer=='audi') %>%
arrange(desc(hwy)) %>%
head(5)
mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy) %>%
mutate(평균연비변수 = 합산연비변수/2)
mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy) %>%
mutate(평균연비변수 = 합산연비변수/2)
# 문제1
mpg %>%
filter(displ<=4) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 4 이하인 자동차의 고속도로 연비 평균
# 문제2 ??
mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), cty) # 각 제조사의 cty의 평균
# 문제2 ??
mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
head(1,14)
# 문제2 ??
mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
head(1)
# 문제2 ??
mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
head()
hwy1 %>%
summarise_each(funs(mean), hwy) # chevrolet, ford, honda의 hwy의 평균
mpg1 # class, cty로만 구성
# 문제6
mpg %>%
filter(manufacturer=='audi') %>%
arrange(desc(hwy)) %>%
head(5)
mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy) %>%
mutate(평균연비변수 = 합산연비변수/2)
mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
head(3)
mpg10 <- filter(mpg, displ<=4)
mpg11 <- filter(mpg, displ>=5)
mean(mpg10); mean(mpg11)
# 문제2 ??
mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
# audi의 cty 평균연비 = 17.6 ,toyota의 cty 평균연비 = 18.5
# 문제2 선생님풀이이
mpg12 <- filter(mpg, manufacturer=='audi')
# 문제2 ??
mpg %>%
group_by(manufacturer) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
# audi의 cty 평균연비 = 17.6 ,toyota의 cty 평균연비 = 18.5
# 문제2 선생님풀이이
mpg12 <- filter(mpg, manufacturer=='audi')
hwy1 %>%
summarise_each(funs(mean), hwy) # chevrolet, ford, honda의 hwy의 평균
hwy2 <- filter(hwy1, manufacturer %in% c('chevrolet','ford', 'honda'))
hwy2 # chevrolet, ford, honda 각각의 hwy의 평균
mpg1 <- select(mpg, manufacturer, class, cty)
mpg1 # class, cty로만 구성
mpg1 <- select(mpg, class, cty)
mpg1 # class, cty로만 구성
# 문제5
mpg %>%
group_by(class) %>%
summarise_each(funs(mean),cty ) %>% # class 별로 cty 평균 연비
arrange(desc(cty))
# 문제5
mpg %>%
filter(class %in% c('suv', 'compact')) %>%
group_by(class) %>%
summarise_each(funs(mean),cty ) %>% # class 별로 cty 평균 연비
arrange(desc(cty))
# 문제6
mpg %>%
filter(manufacturer=='audi') %>%
arrange(desc(hwy)) %>%
head(5)
# 문제6
mpg %>%
filter(manufacturer=='audi') %>%
select(manufacturer, model, hwy) %>%
arrange(desc(hwy)) %>%
head(5)
mpg3 <- mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy)
mpg3 <- mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy)
mpg3
mpg3 %>%
select(manufacturer, cty, hwy, 합산연비변수) %>%
mutate(평균연비변수 = 합산연비변수/2)
mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy)
mpg3 %>%
select(manufacturer, cty, hwy, 합산연비변수) %>%
mutate(평균연비변수 = 합산연비변수/2)
mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
head(3)
# 문제7-3
mpg4 <- mpg3 %>%
select(manufacturer, cty, hwy, 합산연비변수) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
head(3)
mpg4
mpg %>%
select(manufacturer, cty, hwy) %>%
mutate(합산연비변수 = cty+hwy) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
head(3)
rm(list=ls())
install.packages('reshape2')
library('reshape2')
fruits
fruits
Fruits
library(plyr)
fruits <- read.csv('fruits_10.csv', header = T)
fruits
melt(fruits, id='year')
melt(fruits, id='year')
source('~/.active-rstudio-document', echo=TRUE)
fruits
melt(fruits, id='year')
melt(fruits, id='qty')
melt(fruits, id='name')
melt(fruits, id='year')
melt(fruits, id=c('year', 'name')
melt(fruits, id=c('year', 'name'))
melt(fruits, id=c('year', 'name'))
melt(fruits, id=c('year', 'name'), variable.name = 'var_name', value.name = 'val_name')
mtest <- melt(fruits, id=c('year','name'), variable.name = 'var_name', value.name = 'val_name')
mtest <- melt(fruits, id=c('year','name'), variable.name = 'var_name', value.name = 'val_name')
mtest
dcast(mtest, year+name~var_name)
dcast(mtest, year~var_name)
dcast(mtest,name~var_name,sum)
# stringr
install.packages('stringr')
install.packages("stringr")
# stringr
install.packages('stringr')
library(stringr)
fruits <- c('apple', 'Apple', 'banana', 'pineapple')
str_detect(fruits, 'A')
fruits <- c('apple', 'Apple', 'Banana', 'pineapple')
str_detect(fruits, 'A')      # 내가 찾고싶은거는 대문자
fruits <- c('apple', 'Apple', 'banana', 'pineapple')
str_detect(fruits, '^a')      # 내가 찾고싶은거는 대문자 'A' 그래서 두번째가 T.
str_detect(fruits, 'e$')      # 대문자 'A' 찾기 두번째가 T.
str_detect(fruits, '^[aA]')      #
str_detect(fruits, '[aA]')      #
# 문제8
mpg
library('ggplot2')
mpg
# 문제8
mpg
mpg %>%
group_by(class)
# 문제8
mpg
mpg %>%
group_by(class)
# dplyr 연습문제(ppt)
install.packages('ggplot2')
install.packages("ggplot2")
# dplyr 연습문제(ppt)
install.packages('ggplot2')
library('ggplot2')
mpg %>%
group_by(class)
# 문제2 ??
mpg %>%
group_by(manufacturer %in% ) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
# audi의 cty 평균연비 = 17.6 ,toyota의 cty 평균연비 = 18.5
# 문제2 선생님풀이이
mpg12 <- filter(mpg, manufacturer=='audi')
str_detect(fruits, ignore.case('a'))
str_detect(fruits, ignore.case('a'))
library(stringr)
str_detect(fruits, ignore.case('a'))
str_detect(fruits, ignore.case('a'))
str_detect(fruits, ignore.case(a))
str_detect(fruits, ignore.case('a'))
ignore.csee?
?ignore.csee
str_detect(fruits, regex('a'), ignore.case=T)
str_detect(fruits, regex('a'), ignore.case=T)
str_detect(fruits, regex('a', ignore.case=T))
str_detect(fruits, regex('a', ignore_case=T))
str_detect(fruits, ignore_case('a'))
str_detect(fruits, ignore.case('a'))
str_detect(fruits, ignore_case('a'))
fruits
str_count(fruit,ignore.case('a'))
str_count(fruit, regex('a', ignore_case=T)
str_count(fruit, regex('a', ignore_case=T)
str_count(fruits,'a')
str_c('apple', 'banana')
str_c('Fruits:', fruits)
fruits
str_c(fruits, 'name is', fruits)
str_c(Fruits, 'name is', fruits)
str_c(fruits, 'name is', fruits)
str_c(fruits, 'name is:', fruits)
str_c(fruits, 'name is', fruits)
str_c(fruits, collapse='')
str_c(fruits, collapse=',')
str_c(fruits, collapse="_")
# str_dup
str_dup(fruits,3)
# str_length
str_length(apple)
# str_length
str_length('apple')
str_length(fruits)
# str_locate
str_locate('apple','a')
str_locate(fruits, 'a')
# str_count
fruits
# str_replace
str_replace('apple','p','*')
str_replace('apple','p','**')
str_replace_all('apple','p','*')
# str_split
fruits <- str_c('apple', '/', 'orange', '/', 'banana')
fruits
str_split(fruits,'/')
# str_sub
fruits
str_sub(fruits, start=1, end=3)
str_sub(fruits, start=6 ,end=9)
str_sub(fruits, start=7)
str_sub(fruits, start=-5)      # -5에서 시작해서 끝까지 출력
# str_trim
str_trim(' apple banana berry ')
str_trim('\t apple banana berry ')
str_trim(' apple banana berry \n')
.libpaths
.libpaths()
library('ggplot2')
mpg
mpg
# 문제1
mpg %>%
filter(displ<=4) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 4 이하인 자동차의 고속도로 연비 평균
# 문제1
mpg %>%
filter(displ<=4) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 4 이하인 자동차의 고속도로 연비 평균
mpg
# 문제1
mpg %>%
filter(displ<=4) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 4 이하인 자동차의 고속도로 연비 평균
# 평균hwy = 25.96319
mpg
# 평균hwy = 25.96319
mpg %>%
filter(displ<=4)
mpg
# dplyr 연습문제(ppt)
install.packages('ggplot2')
install.packages("ggplot2")
library('ggplot2')
mpg
# 문제1
mpg %>%
filter(displ<=4) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 4 이하인 자동차의 고속도로 연비 평균
mpg %>%
filter(displ<=4)
library('googleVis')
library('dplyr')
# 문제1
mpg %>%
filter(displ<=4) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 4 이하인 자동차의 고속도로 연비 평균
library('googleVis')
library('plyr')
library('dplyr')
# 문제1
mpg %>%
filter(displ<=4) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 4 이하인 자동차의 고속도로 연비 평균
# 평균hwy = 25.96319
mpg %>%
filter(displ>=5) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 5 이상인 자동차의 고속도로 연비 평균
# 평균hwy = 18.07895
# 문제1 선생님 풀이
mpg10 <- filter(mpg, displ<=4)
mpg11 <- filter(mpg, displ>=5)
mpg10 <- filter(mpg, displ<=4)
mpg11 <- filter(mpg, displ>=5)
mean(mpg10); mean(mpg11);
mpg10 <- filter(mpg, displ<=4)
mpg11 <- filter(mpg, displ>=5)
mean(mpg10); mean(mpg11)
mean(mpg10)
# 평균hwy = 18.07895
# 문제1 선생님 풀이
mpg10 <- filter(mpg, displ<=4)
mpg10
mpg11 <- filter(mpg, displ>=5)
mpg11
mean(mpg10)
mean('mpg10')
mean(mpg10, na.rm = T)
mean(mpg10, hwy)
mean(mpg10, hwy)
# 평균hwy = 25.96319
mpg %>%
filter(displ>=5) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 5 이상인 자동차의 고속도로 연비 평균
# 문제1
mpg %>%
filter(displ<=4) %>%
summarise(avarage=mean(hwy,na.rm = T)) # 자동차 배기량이 4 이하인 자동차의 고속도로 연비 평균
# 문제2 ??
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
# audi의 cty 평균연비 = 17.6 ,toyota의 cty 평균연비 = 18.5
# 문제2 선생님풀이이
mpg12 <- filter(mpg, manufacturer=='audi')
# 문제2 ??
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
mpg
# 문제2 ??
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
mpg
# 문제2 ??
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
mpg
mpg
# 문제2 ??
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
mpg
# 문제2 ??
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty) %>% # 각 제조사의 cty의 평균
mpg
# 문제2 ??
mpg
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota'))
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty) # 각 제조사의 cty의 평균
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty) # 각 제조사의 cty의 평균
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota'))
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty)
mpg %>%
group_by(manufacturer %in% c('audi', 'toyota')) %>%
summarise_each(funs(mean), cty) # 각 제조사의 cty의 평균
# audi의 cty 평균연비 = 17.6 ,toyota의 cty 평균연비 = 18.5
# 문제2 선생님풀이이
mpg12 <- filter(mpg, manufacturer=='audi')
mpg12
mpg13 <- filter(mpg, manufacturer=='toyota')
mpg13
mean(mpg13, hwy)
install.packages('dplyr')
library('dplyr')
library('hflights')
install.packages('hflights')
library('hflights')
head('hflights')
str(flights)
head(hflights)
str(hflights)
head('hflights')
str('hflights')
hflights_df <- tbl_df(hflights)
hflights_df
